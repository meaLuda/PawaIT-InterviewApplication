name: Deploy Insight-Agent

on:
  push:
    branches: [live]
  pull_request:
    branches: [live]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_NAME: insight-agent

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          cd app
          pip install -r requirements.txt
          pip install pytest flake8
          
      - name: Lint code
        run: |
          cd app
          flake8 main.py --max-line-length=100
          
      - name: Test application
        run: |
          cd app
          python -m pytest --version || echo "No tests yet"

  build-and-deploy:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
      
    steps:
      - uses: actions/checkout@v4
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev
          
      - name: Build and push Docker image
        run: |
          IMAGE_TAG="$GITHUB_SHA"
          IMAGE_NAME="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/insight-agent-repo/insight-agent"
          
          cd app
          docker build -t "$IMAGE_NAME:$IMAGE_TAG" -t "$IMAGE_NAME:latest" .
          docker push "$IMAGE_NAME:$IMAGE_TAG"
          docker push "$IMAGE_NAME:latest"
          
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0
          
      - name: Terraform Init
        run: |
          cd terraform
          terraform init
          
      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan \
            -var="project_id=${{ env.PROJECT_ID }}" \
            -var="region=${{ env.REGION }}" \
            -var="service_name=${{ env.SERVICE_NAME }}" \
            -var="image_tag=${{ env.IMAGE_TAG }}"
            
      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve \
            -var="project_id=${{ env.PROJECT_ID }}" \
            -var="region=${{ env.REGION }}" \
            -var="service_name=${{ env.SERVICE_NAME }}" \
            -var="image_tag=${{ env.IMAGE_TAG }}"